<!--
$Id$
$Revision$
$Date$
$Author$

The Netarchive Suite - Software to harvest and preserve websites
Copyright 2004-2010 Det Kongelige Bibliotek and Statsbiblioteket, Denmark

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
-->
<project name="NetarchiveSuite" default="compile">
    <property name="srcdir" value="src"/>
    <property name="classdir" value="classes"/>
    <property name="webpages" value="webpages"/>
    <property name="testdir" value="tests"/>
    <property name="builder" value="NetarchiveSuite development group"/>
    <property name="releasetestdir" value="${user.home}/tmp_releasetest"/>
    <property name="depcheckdir" value="${user.home}/tmp_dependencycheck"/>
    <property name="jarclasspath" value="
    db/derby-10.1.1.0.jar
    db/derbyclient-10.1.1.0.jar
    commons-cli-1.0.jar	
    commons-fileupload-1.0.jar
    commons-net-1.4.1.jar
    dom4j-1.5.2.jar
    heritrix/lib/heritrix-1.12.1b.jar
    heritrix-dependencies/commons-codec-1.3.jar
    heritrix-dependencies/commons-lang-2.3.jar
    heritrix-dependencies/fastutil-5.0.3-heritrix-subset-1.0.jar
    heritrix-dependencies/je-3.2.23.jar
    heritrix-dependencies/mg4j-1.0.1.jar
    commons-httpclient-3.0.1.jar
    commons-logging-1.0.4.jar
    httpunit-1.6.jar
    jaxen-1.1.jar
    jetty-6.1.6.jar
    jetty-dependencies/ant-1.6.5.jar
    jetty-dependencies/core-3.1.1.jar
    jetty-dependencies/jetty-util-6.1.6.jar
    jetty-dependencies/jsp-2.1.jar
    jetty-dependencies/jsp-api-2.1.jar
    jetty-dependencies/servlet-api-2.5-6.1.6.jar
    jetty-dependencies/slf4j-api-1.3.1.jar
    jetty-dependencies/slf4j-jcl-1.3.1.jar
    sunjms-lib/imq-4.1-b22g.jar
    sunjms-lib/jms-4.1-b22g.jar
    mail-dependencies/mail-1.4.jar
    mail-dependencies/activation-1.1.jar
    libidn-0.5.9.jar
    lucene-core-2.0.0.jar
    deduplicator-0.3.0-20061218-patched-20080527.jar
    "/>
    <property name="toolclasspath" value="${jarclasspath} "/>
    <path id="jars.path">
        <pathelement path="${classdir}"/>
        <fileset dir="lib">
            <patternset id="jars.path.set">
                <include name="db/derby-10.1.1.0.jar"/>
            	<include name="db/derbyclient-10.1.1.0.jar"/>
            	<include name="commons-cli-1.0.jar"/>
                <include name="commons-fileupload-1.0.jar"/>
                <include name="commons-net-1.4.1.jar"/>
                <include name="dom4j-1.5.2.jar"/>
                <include name="heritrix/lib/heritrix-1.12.1b.jar"/>
                <include name="heritrix-dependencies/commons-codec-1.3.jar"/>
            	<include name="heritrix-dependencies/commons-lang-2.3.jar"/>
                <include name="heritrix-dependencies/fastutil-5.0.3-heritrix-subset-1.0.jar"/>
                <include name="heritrix-dependencies/je-3.2.23.jar"/>
                <include name="heritrix-dependencies/mg4j-1.0.1.jar"/>
                <include name="commons-httpclient-3.0.1.jar"/>
                <include name="commons-logging-1.0.4.jar"/>
                <include name="junit-3.8.2.jar"/>
                <include name="jaxen-1.1.jar"/>
                <include name="jetty-6.1.6.jar"/>
                <include name="jetty-dependencies/ant-1.6.5.jar"/>
                <include name="jetty-dependencies/core-3.1.1.jar"/>
                <include name="jetty-dependencies/jetty-util-6.1.6.jar"/>
                <include name="jetty-dependencies/jsp-2.1.jar"/>
                <include name="jetty-dependencies/jsp-api-2.1.jar"/>
                <include name="jetty-dependencies/servlet-api-2.5-6.1.6.jar"/>
                <include name="jetty-dependencies/slf4j-api-1.3.1.jar"/>
                <include name="jetty-dependencies/slf4j-jcl-1.3.1.jar"/>
                <include name="sunjms-lib/imq-4.1-b22g.jar"/>
                <include name="sunjms-lib/jms-4.1-b22g.jar"/>
                <include name="mail-dependencies/mail-1.4.jar"/>
                <include name="mail-dependencies/activation-1.1.jar"/>
                <include name="libidn-0.5.9.jar"/>
                <include name="lucene-core-2.0.0.jar"/>
                <include name="deduplicator-0.3.0-20061218-patched-20080527.jar"/>
            </patternset>
        </fileset>
    </path>

    <!-- A few extra libraries are required for the unittests for web pages. -->
    <path id="unittest.jars.path">
        <pathelement path="${classdir}"/>
        <fileset dir="lib">
            <patternset refid="jars.path.set"/>
        </fileset>
        <fileset dir="tests/lib">
            <include name="httpunit-1.6.jar"/>
            <include name="httpunit-dependencies/nekohtml-0.9.4.jar"/>
            <include name="db/derbytools-10.1.1.0.jar"/>
            <include name="mockobjects-core-0.09.jar"/>
            <include name="mockobjects-jdk1.4-0.09.jar"/>
            <include name="mockobjects-jdk1.4-j2ee1.3-0.09.jar"/>
            <include name="jakarta-oro-2.0.8.jar"/>
        </fileset>
    </path>

    <target name="clean"
            description="Remove all compiled code and generated wars and jars">
        <delete dir="${classdir}/dk"/>
        <delete dir="${classdir}/webpages"/>
        <delete verbose="false">
           <fileset dir="webpages">
              <include name="*.war"/>
           </fileset>
        </delete>
        <delete verbose="false">
           <fileset dir="lib">
              <include name="dk.netarkivet.*.jar"/>
           </fileset>
        </delete>
    </target>

    <target name="compile"
            description="Compile all production classes, and copy properties to class dir">
        <!-- ensure output dir exists -->
        <mkdir dir="${classdir}"/>
        <javac source="1.5" srcdir="${srcdir}" destdir="${classdir}" debug="on"
               encoding="UTF-8">
            <classpath refid="jars.path"/>
        </javac>
        <copy todir="${classdir}">
            <fileset dir="${srcdir}">
            	<!-- adding Translations*.properties files -->
            	<include name="**/*.properties"/>
            	<!-- adding default settings files -->
            	<include name="**/*.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="compiletests" depends="compile"
            description="Compile all test and production classes">
        <javac source="1.5" srcdir="${testdir}" destdir="${classdir}" debug="on"
               encoding="UTF-8">
            <classpath refid="unittest.jars.path"/>
        </javac>
    </target>

    <target name="compileclean" depends="clean,compile"
            description="Clean up before doing a compile">
    </target>

    <target name="compiletestsclean" depends="clean,compiletests"
            description="Clean up before doing a compiletests">
    </target>

    <target name="unittest" depends="compiletestsclean"
            description="Run unit tests on a clean compile">
        <chmod perm="+x">
            <fileset dir="tests/dk/netarkivet/harvester/sidekick/data/">
                <include name="*.sh"/>
            </fileset>
        </chmod>
        <chmod perm="0600">
            <fileset dir="conf">
                <include name="jmxremote.password"/>
            </fileset>
        </chmod>
        <junit fork="true" timeout="300000">
            <jvmarg value="-Xmx512m"/>
            <jvmarg value="-Ddk.netarkivet.settings.file=tests/dk/netarkivet/test-settings.xml"/>
            <jvmarg value="-Dorg.apache.commons.logging.log=org.apache.commons.logging.impl.Jdk14Logger"/>
            <jvmarg value="-Djava.util.logging.config.file=tests/dk/netarkivet/testlog.prop"/>
            <jvmarg value="-Djava.security.manager"/>
            <jvmarg value="-Djava.security.policy=conf/test.policy"/>
            <jvmarg value="-Dorg.archive.crawler.frontier.AbstractFrontier.queue-assignment-policy=org.archive.crawler.frontier.HostnameQueueAssignmentPolicy,org.archive.crawler.frontier.IPQueueAssignmentPolicy,org.archive.crawler.frontier.BucketQueueAssignmentPolicy,org.archive.crawler.frontier.SurtAuthorityQueueAssignmentPolicy,dk.netarkivet.harvester.harvesting.DomainnameQueueAssignmentPolicy"/>
            <classpath refid="unittest.jars.path"/>
            <formatter type="brief" usefile="false"/>
            <test name="dk.netarkivet.UnitTesterSuite"/>
        </junit>
    </target>

    <target name="fulltest" depends="compiletestsclean"
            description="Run unit and integrity tests on a clean compile">
        <junit fork="true">
            <jvmarg value="-Xmx512m"/>
            <jvmarg value="-Ddk.netarkivet.settings.file=tests/dk/netarkivet/test-settings.xml"/>
            <jvmarg value="-Dorg.apache.commons.logging.log=org.apache.commons.logging.impl.Jdk14Logger"/>
            <jvmarg value="-Djava.util.logging.config.file=tests/dk/netarkivet/testlog.prop"/>
            <jvmarg value="-Djava.security.manager"/>
            <jvmarg value="-Djava.security.policy=conf/test.policy"/>
            <jvmarg value="-Dorg.archive.crawler.frontier.AbstractFrontier.queue-assignment-policy=org.archive.crawler.frontier.HostnameQueueAssignmentPolicy,org.archive.crawler.frontier.IPQueueAssignmentPolicy,org.archive.crawler.frontier.BucketQueueAssignmentPolicy,org.archive.crawler.frontier.SurtAuthorityQueueAssignmentPolicy,dk.netarkivet.harvester.harvesting.DomainnameQueueAssignmentPolicy"/>
            <classpath refid="unittest.jars.path"/>
            <formatter type="brief" usefile="false"/>
            <test name="dk.netarkivet.FullTesterSuite"/>
        </junit>
    </target>

    <target name="jarfiles"
            depends="commonjar, harvesterjar, archivejar, viewerproxyjar, monitorjar, deployjar"
            description="Compile all jar files">
    </target>

    <target name="warfiles" depends="clean"
            description="Compile all war files">
        <!-- make the WAR-files -->
        <war destfile="${webpages}/HarvestDefinition.war" basedir="${webpages}/HarvestDefinition" update="no" webxml="${webpages}/HarvestDefinition/WEB-INF/web.xml">
            <include name="**/*"/>
            <exclude name="WEB-INF/web.xml"/>
            <webinf dir="lib/taglibs">
                <include name="*.tld"/>
            </webinf>
        </war>
        <war destfile="${webpages}/History.war" basedir="${webpages}/History" update="no" webxml="${webpages}/History/WEB-INF/web.xml">
            <include name="**/*"/>
            <exclude name="WEB-INF/web.xml"/>
            <webinf dir="lib/taglibs">
                <include name="*.tld"/>
            </webinf>
        </war>
        <war destfile="${webpages}/BitPreservation.war" basedir="${webpages}/BitPreservation" update="no" webxml="${webpages}/BitPreservation/WEB-INF/web.xml">
            <include name="**/*"/>
            <exclude name="WEB-INF/web.xml"/>
            <webinf dir="lib/taglibs">
                <include name="*.tld"/>
            </webinf>
        </war>
        <war destfile="${webpages}/QA.war" basedir="${webpages}/QA" update="no" webxml="${webpages}/QA/WEB-INF/web.xml">
            <include name="**/*"/>
            <exclude name="WEB-INF/web.xml"/>
            <webinf dir="lib/taglibs">
                <include name="*.tld"/>
            </webinf>
        </war>
        <war destfile="${webpages}/Status.war" basedir="${webpages}/Status" webxml="${webpages}/Status/WEB-INF/web.xml">
            <include name="**/*"/>
            <exclude name="WEB-INF/web.xml"/>
            <webinf dir="lib/taglibs">
                <include name="*.tld"/>
            </webinf>
        </war>
    </target>

    <target name="javadoc"
            description="Build the javadocs">
        <javadoc author="false"
                 destdir="docs/apidocs"
                 packagenames="dk.netarkivet.common.*,dk.netarkivet.harvester.*,dk.netarkivet.archive.*,
                        dk.netarkivet.viewerproxy.*, dk.netarkivet.monitor.*"
                 sourcepath="src"
                 use="true"
                 version="false"
                 package="true">
            <classpath refid="jars.path"/>
        </javadoc>
    </target>

    <target name="sourcezipball" depends="clean"
            description="Build a package of all source code needed to build the project, and develop new code">
        <zip basedir="." destfile="NetarchiveSuite-src.zip">
            <include name="conf/**"/>
            <include name="harvestdefinitionbasedir/**"/>
            <include name="lib/**"/>
            <exclude name="lib/dk.netarkivet.*.jar"/>
            <include name="log"/>
            <include name="modules/**"/>
            <include name="scripts/**"/>
            <include name="src/**"/>
            <include name="tests/**"/>
            <include name="webpages/**"/>
            <exclude name="webpages/*.war"/>
            <include name="log"/>
            <include name="build.xml"/>
            <include name="derby.properties"/>
            <include name="LICENSE.txt"/>
            <include name="README.txt"/>
        </zip>
    </target>

    <target name="releasezipball" depends="javadoc,jarfiles,warfiles"
            description="Build a binary package with all files needed to run the system">
        <zip basedir="." destfile="NetarchiveSuite.zip">
            <include name="docs/apidocs/**"/>
            <include name="conf/**"/>
            <include name="harvestdefinitionbasedir/**"/>
            <include name="lib/**"/>
            <include name="log"/>
            <include name="modules/**"/>
            <zipfileset dir="." includes="scripts/**" excludes="scripts/**/*.sh"/>
            <!-- Add .sh scripts with executable bit set -->
            <zipfileset dir="." includes="scripts/**/*.sh" filemode="755"/>
            <include name="webpages/*.war"/>
            <include name="derby.properties"/>
            <include name="LICENSE.txt"/>
            <include name="README.txt"/>
        </zip>
    </target>

    <target name="commonjar" depends="compileclean"
            description="Build a jar file with the dk.netarkivet.common package with all required libs in the manifest class path">
        <jar destfile="lib/dk.netarkivet.common.jar" basedir="${classdir}" update="no">
            <include name="dk/netarkivet/common/**/*.class"/>
            <include name="dk/netarkivet/common/**/*.properties"/>
            <include name="dk/netarkivet/common/**/*.xml"/> 
            <manifest>
                <attribute name="Builder" value="${builder}"/>
                <attribute name="Class-Path" value="${jarclasspath}"/>
            </manifest>
        </jar>
    </target>

    <target name="archivejar" depends="compileclean"
            description="Build a jar file with the dk.netarkivet.archive package with all required libs in the manifest class path">
        <jar destfile="lib/dk.netarkivet.archive.jar" basedir="${classdir}" update="no">
            <include name="dk/netarkivet/archive/**/*.class"/>
            <include name="dk/netarkivet/archive/**/*.properties"/>
	    <include name="dk/netarkivet/archive/**/*.xml"/>
            <manifest>
                <attribute name="Builder" value="${builder}"/>
                <attribute name="Class-Path" value="dk.netarkivet.common.jar ${jarclasspath}"/>
            </manifest>
        </jar>
    </target>

    <target name="harvesterjar" depends="compileclean"
            description="Build a jar file with the dk.netarkivet.harvester package with all required libs in the manifest class path, and the modules-directory">
        <copy todir="${classdir}">
            <fileset dir=".">
                <include name="modules/**"/>
            </fileset>
        </copy>

        <jar destfile="lib/dk.netarkivet.harvester.jar" basedir="${classdir}" update="no">
            <include name="dk/netarkivet/harvester/**/*.class"/>
            <include name="dk/netarkivet/harvester/**/*.properties"/>
            <include name="dk/netarkivet/harvester/**/*.xml"/>
            <include name="modules/**"/>
            <!-- removed jndi.properties from src
		 <include name="jndi.properties"/> -->
            <manifest>
                <attribute name="Builder" value="${builder}"/>
                <attribute name="Class-Path" value="dk.netarkivet.common.jar ${jarclasspath}"/>
            </manifest>
        </jar>
    </target>

    <target name="monitorjar" depends="compileclean"
            description="Build a jar file with the dk.netarkivet.monitor package with all required libs in the manifest class path">
        <jar destfile="lib/dk.netarkivet.monitor.jar" basedir="${classdir}" update="no">
            <include name="dk/netarkivet/monitor/**/*.class"/>
            <include name="dk/netarkivet/monitor/**/*.properties"/>
            <include name="dk/netarkivet/monitor/**/*.xml"/>
            <manifest>
                <attribute name="Builder" value="${builder}"/>
                <attribute name="Class-Path"
                           value="dk.netarkivet.common.jar
                                  ${jarclasspath}"/>
            </manifest>
        </jar>
    </target>

    <target name="deployjar" depends="compileclean"
            description="Build a jar file with the dk.netarkivet.deploy package with all required libs in the manifest class path">
        <jar destfile="lib/dk.netarkivet.deploy.jar" basedir="${classdir}" update="no">
            <include name="dk/netarkivet/deploy/**/*.class"/>
            <include name="dk/netarkivet/deploy/**/*.properties"/>
            <include name="dk/netarkivet/deploy/**/*.xml"/>
            <manifest>
                <attribute name="Builder" value="${builder}"/>
                <attribute name="Class-Path"
                           value="dk.netarkivet.common.jar
                                  dk.netarkivet.archive.jar
                                  dk.netarkivet.harvester.jar
                                  dk.netarkivet.monitor.jar
                                  ${jarclasspath}"/>
            </manifest>
        </jar>
    </target>

    <target name="checkdep" depends="jarfiles"
            description="Print a line of any referenced classes that are not in the classpath after generating jars">
        <delete dir="${depcheckdir}" failonerror="no"/>
        <mkdir dir="${depcheckdir}"/>
        <javac source="1.5" destdir="${depcheckdir}" srcdir="tests">
            <filename name="dk/netarkivet/common/tools/ClassDependencies.java"/>
        </javac>
        <java fork="yes" classname="dk.netarkivet.common.tools.ClassDependencies" logerror="yes" output="${depcheckdir}/classes">
            <classpath>
                <path path="${depcheckdir}"/>
                <path path="./lib/dk.netarkivet.common.jar"/>
                <path path="./lib/dk.netarkivet.archive.jar"/>
                <path path="./lib/dk.netarkivet.harvester.jar"/>
                <path path="./lib/dk.netarkivet.viewerproxy.jar"/>
                <path path="./lib/dk.netarkivet.deploy.jar"/>
                <path path="./lib/dk.netarkivet.monitor.jar"/>
                <path refid="unittest.jars.path"/>
            </classpath>
            <arg value="dk.netarkivet.archive.arcrepository.ArcRepositoryApplication"/>
            <arg value="dk.netarkivet.archive.bitarchive.BitarchiveApplication"/>
            <arg value="dk.netarkivet.archive.bitarchive.BitarchiveMonitorApplication"/>
            <arg value="dk.netarkivet.deploy.DeployApplication"/>
            <arg value="dk.netarkivet.harvester.harvesting.HarvestControllerApplication"/>
            <arg value="dk.netarkivet.common.webinterface.GUIApplication"/>
            <arg value="dk.netarkivet.viewerproxy.ViewerProxyApplication"/>
            <arg value="dk.netarkivet.harvester.sidekick.SideKick"/>
            <arg value="-x"/>
            <arg value="org/xml/sax"/>
            <arg value="-x"/>
            <arg value="com/sun/jndi/"/>
        </java>
    </target>

<!-- targets used for making clover-reports -->

    <path id="clover.jars.path">
        <path refid="unittest.jars.path"/>
        <fileset dir="/home/konfig">
            <include name=".ant/lib/clover.jar"/>
        </fileset>
    </path>

    <target name="unittest.with.clover" depends="with.clover, compiletestsclean"
            description="Run all unit tests with clover reporting">
        <junit haltonerror="no" haltonfailure="no" fork="on" maxmemory="512m"
            printsummary="withOutAndErr">
            <jvmarg value="-Djava.util.logging.config.file=tests/dk/netarkivet/testlog.prop"/>
            <jvmarg value="-Ddk.netarkivet.settings.file=tests/dk/netarkivet/test-settings.xml"/>
            <jvmarg value="-Djava.security.manager"/>
            <jvmarg value="-Djava.security.policy=conf/test.policy"/>
            <jvmarg value="-Dsettings.common.jms.broker=localhost"/>
            <jvmarg value="-Dsettings.common.environmentName=CLOVER"/>
            <jvmarg value="-Ddk.netarkivet.ftp.serverName=localhost"/>
            <jvmarg value="-Ddk.netarkivet.testutils.runningAs=CLOVER"/>
            <classpath refid="clover.jars.path"/>
            <formatter type="brief" usefile="false"/>
            <test name="dk.netarkivet.UnitTesterSuite"/>
        </junit>
    </target>

    <target name="with.clover"
            description="Enable clover reporting. Requires the clover extension in your ant classpath.">
        <taskdef resource="clovertasks"/>
        <typedef resource="clovertypes"/>
        <clover-setup initString="clover-db/mycoverage.db"
                      flushpolicy="interval" flushinterval="1000">
            <files>
                <exclude name="tests/**/*Tester*.java"/>
            </files>
        </clover-setup>
    </target>

    <target name="clover.report" depends="with.clover, unittest.with.clover"
            description="Generate a clover report on all unit tests. Requires the clover extension in your ant classpath.">
        <clover-report>
            <current outfile="/usr/local/apache/htdocs/clover/clover_current">
                <!-- In the HTML output, put least absolute covered on top -->
                <format type="html" orderby="ElementsUncoveredDesc"/>
                <fileset dir="src" includes="**/*">
                </fileset>
            </current>
        </clover-report>
    </target>
</project>
